import { filter } from "rxjs";
import { configurationToken } from "../configuration";
import { Injectable } from "../dependency-injection/Injectable";
import { logEntriesFactory } from "./logEntries";
import { logLevelMap } from "./logger";
/**
 * The factory subscribes to log entry events and, based on the configured log level,
 * forwards matching log entries to the logger specified in the CameraKit configuration object.
 *
 * @internal
 */
export const registerLogEntriesSubscriber = Injectable("registerLogEntriesSubscriber", [configurationToken, logEntriesFactory.token], (configuration, logEntries) => {
    logEntries
        .pipe(filter((entry) => logLevelMap[entry.level] >= logLevelMap[configuration.logLevel]))
        .subscribe((logEntry) => {
        switch (configuration.logger) {
            case "console":
                console[logEntry.level](`[CameraKit.${logEntry.module}]`, ...logEntry.messages);
                break;
        }
    });
});
//# sourceMappingURL=registerLogEntriesSubscriber.js.map