import { LensCoreModule } from "../../lens-core-module";
import { MakeTaggedBusinessEvent } from "../../metrics/businessEventsReporter";
import { LensRepository } from "../LensRepository";
import { LensAssetRepository } from "./LensAssetRepository";
/**
 * The AssetValidationFailed metric reports every time we handle an asset checksum validation failure.
 */
export type AssetValidationFailed = MakeTaggedBusinessEvent<"assetValidationFailed">;
/**
 * Registers a remote asset provider function with a given instance of LensCore.
 *
 * *Note:* LensCoreModule.initialize must be called on the desired LensCoreModule instance **prior** to passing it
 * to the LensAssetsProvider constructor. If this class is instantiated with a LensCoreModule that has not been
 * initialized, the registry of the asset provider function will fail silently and no remote assets will be loaded.
 * @internal
 */
export declare const registerLensAssetsProvider: {
    (args_0: LensCoreModule, args_1: LensRepository, args_2: LensAssetRepository): void;
    token: "registerLensAssetsProvider";
    dependencies: readonly ["lensCore", "LensRepository", "lensAssetRepository"];
};
