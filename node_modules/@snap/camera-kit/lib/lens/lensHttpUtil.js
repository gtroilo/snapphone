import { __awaiter } from "tslib";
import { isGetGroupResponse, isLensProto } from "./Lens";
const relativePath = "/com.snap.camerakit.v3.Lenses";
function getRequestId(res) {
    return res.headers.get("x-request-id");
}
export function retrieveCameraKitLens(httpClient, lensId, groupId, apiHostname) {
    return __awaiter(this, void 0, void 0, function* () {
        const url = `https://${apiHostname}${relativePath}/groups/${groupId}/lenses/${lensId}`;
        const response = yield httpClient(url, { credentials: "include" });
        const body = yield response.json();
        const lens = body.lens;
        if (!isLensProto(lens)) {
            throw new Error(`Expected request to ${url} to return a Lens. Got:\n\n${JSON.stringify(body)} with request-id of "${getRequestId(response)}"`);
        }
        return lens;
    });
}
export function retrieveCameraKitLensGroup(httpClient, groupId, apiHostname) {
    return __awaiter(this, void 0, void 0, function* () {
        const url = `https://${apiHostname}${relativePath}/groups/${groupId}`;
        const response = yield httpClient(url, { credentials: "include" });
        const body = yield response.json();
        if (!isGetGroupResponse(body)) {
            throw new Error(`Expected request to ${url} to return a LensGroup. Got:\n\n${JSON.stringify(body)} with request-id of "${getRequestId(response)}"`);
        }
        return body.lenses;
    });
}
//# sourceMappingURL=lensHttpUtil.js.map