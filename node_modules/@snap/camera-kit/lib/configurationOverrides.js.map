{"version":3,"file":"configurationOverrides.js","sourceRoot":"","sources":["../src/configurationOverrides.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,iBAAiB,GAAG,0BAA0B,CAAC;AAOrD,MAAM,0BAA0B,GAAiC,CAAC,sBAAsB,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AAEhH,0BAA0B,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,EAAE;IACnD,iBAAiB,CAAC,eAAe,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC;AAEH,SAAS,iBAAiB,CAAC,kBAAyC;IAChE,IAAI,OAAO,MAAM,KAAK,WAAW;QAAE,OAAO;IAE1C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,iBAAiB,GAAG,kBAAkB,EAAE,EAAE;QACvE,GAAG;;YACC,OAAO,MAAA,yBAAyB,EAAE,0CAAG,kBAAkB,CAAC,CAAC;QAC7D,CAAC;QACD,GAAG,CAAC,KAAU;;YACV,MAAM,eAAe,GAAG,MAAA,yBAAyB,EAAE,mCAAI,EAAE,CAAC;YAC1D,eAAe,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;YAC5C,IAAI,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,EAAE;gBAC/E,cAAc,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;aAChD;iBAAM;gBACH,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;aAC9E;QACL,CAAC;QACD,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;AACP,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,yBAAyB;IACrC,MAAM,eAAe,GAAG,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAClE,OAAO,eAAe,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC1D,CAAC","sourcesContent":["import { CameraKitBootstrapConfiguration } from \"./configuration\";\n\n/**\n * Prefix of override key on window object.\n */\nconst windowFieldPrefix = \"__snap_camkit_override__\";\n\n/**\n * Configuration overrides that are stored in session storage.\n */\ntype StoredOverrides = Pick<CameraKitBootstrapConfiguration, \"wasmEndpointOverride\" | \"logger\" | \"logLevel\">;\n\nconst configPropertiesToOverride: Array<keyof StoredOverrides> = [\"wasmEndpointOverride\", \"logger\", \"logLevel\"];\n\nconfigPropertiesToOverride.forEach((fieldToOverride) => {\n    defineWindowField(fieldToOverride);\n});\n\nfunction defineWindowField(propertyToOverride: keyof StoredOverrides) {\n    if (typeof window === \"undefined\") return;\n\n    Object.defineProperty(window, `${windowFieldPrefix}${propertyToOverride}`, {\n        get() {\n            return getConfigurationOverrides()?.[propertyToOverride];\n        },\n        set(value: any) {\n            const storedOverrdies = getConfigurationOverrides() ?? {};\n            storedOverrdies[propertyToOverride] = value;\n            if (Object.values(storedOverrdies).every((value) => typeof value === \"undefined\")) {\n                sessionStorage.removeItem(windowFieldPrefix);\n            } else {\n                sessionStorage.setItem(windowFieldPrefix, JSON.stringify(storedOverrdies));\n            }\n        },\n        enumerable: false,\n        configurable: true,\n    });\n}\n\n/**\n * Checks whether there are configuration overrides stored, and if yes, returns them.\n *\n * @internal\n */\nexport function getConfigurationOverrides(): StoredOverrides | undefined {\n    const overridesString = sessionStorage.getItem(windowFieldPrefix);\n    return overridesString && JSON.parse(overridesString);\n}\n"]}