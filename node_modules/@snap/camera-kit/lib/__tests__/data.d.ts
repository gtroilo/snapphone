/// <reference types="jest" />
import { ContentProto, LensProto } from "../lens";
import { LensCoreModule, AssetType as LensCoreAssetType } from "../lens-core-module/generated-types";
export declare const falsyValues: readonly [false, null, undefined, 0, ""];
export declare const truthyValues: readonly [true, 1, {}, Date, readonly []];
export declare function createLensFixture(name: string, content?: Partial<ContentProto>): LensProto;
export type LensCoreMock = Pick<jest.Mocked<LensCoreModule>, "AssetType" | "CanvasType" | "InterfaceAction" | "InterfaceControl" | "ExternalMediaOrientation" | "initialize" | "setRemoteAssetsProvider" | "provideRemoteAssetsResponse" | "getOutputCanvases" | "setRenderLoopMode" | "RenderLoopMode" | "setOnFrameProcessedCallback" | "setClientInterfaceRequestHandler" | "provideExternalImage" | "provideExternalVideo" | "registerSavePersistentStoreCallback">;
export declare const AssetType: Record<keyof LensCoreModule["AssetType"], LensCoreAssetType>;
export declare function createLensCore(): LensCoreMock;
